name: iOS starter workflow
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main 
     
jobs:
  build:
    name: Build and Test default scheme using any available iPhone simulator
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: check Xcode version
        run: /usr/bin/xcodebuild -version

      - name: Install the Apple certificate and provisioning profile
        env:
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        run: |
          # Copy the certificate and provisioning profile to the correct locations
          cp Certificates.p12 $RUNNER_TEMP/build_certificate.p12
          cp DemoTest.mobileprovision $RUNNER_TEMP/build_pp.mobileprovision


          # Import the certificate to the user keychain
          security import $RUNNER_TEMP/build_certificate.p12 -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k ~/Library/Keychains/login.keychain-db
          security list-keychain -d user -s ~/Library/Keychains/login.keychain-db

          # Apply the provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $RUNNER_TEMP/build_pp.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles

      - name: check Xcode version
        run: /usr/bin/xcodebuild -version

      - name: Copy Podfile
        run: cp -r SignIn/Podfile .

      - name: Install CocoaPods
        run: |
          sudo gem install cocoapods
          pod repo list
          pod setup


      - name: Install dependencies
        run: pod install --project-directory=SignIn/

      - name: Check current directory
        run: |
          pwd
          ls -al


      - name: Navigate to SignIn folder
        run: |
          cd SignIn/
          ls

      - name: Update provisioning profile specifier in Xcode project
        run: |
          gem install xcodeproj
          ruby - <<EOF
          require 'xcodeproj'

          # Define the path to your Xcode project
          project_path = 'SignIn/SignIn.xcodeproj'

          # Define the target name
          target_name = 'SignIn'

          # Define the provisioning profile specifier
          provisioning_profile_specifier = "DemoTest"

          # Open the Xcode project
          project = Xcodeproj::Project.open(project_path)

          # Find the target
          target = project.targets.find { |t| t.name == target_name }

          # Update the provisioning profile settings
          target.build_configuration_list.build_configurations.each do |configuration|
            configuration.build_settings['PROVISIONING_PROFILE_SPECIFIER'] = provisioning_profile_specifier
          end

          # Save the changes to the Xcode project file
          project.save
          EOF
          
      - name: Clear Derived Data
        run: rm -rf ~/Library/Developer/Xcode/DerivedData
      
      - name: Archive application
        run: |
          xcodebuild -workspace SignIn/SignIn.xcworkspace \
            -scheme SignIn \
            -archivePath $RUNNER_TEMP/SignIn.xcarchive \
            -sdk iphonesimulator \
            -configuration Debug \
            -destination 'platform=iOS Simulator,name=iPhone 13 Pro Max,OS=16.2' \
            clean archive \
            DEVELOPMENT_TEAM="X372X3URRM" \
            PROVISIONING_PROFILE_SPECIFIER="DemoTest" \
            -allowProvisioningUpdates
     
      - name: List Archive Contents
        run: ls -al $RUNNER_TEMP
        
      - name: Check Archive Path
        run: echo "Archive Path:$RUNNER_TEMP/SignIn.xcarchive"


  export:
    name: Export IPA and Transfer to Remote Server
    needs: build
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Generate ExportOptions.plist
        run: |
          cat > ExportOptions.plist <<EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>compileBitcode</key>
            <false/>
            <key>destination</key>
            <string>export</string>
            <key>method</key>
            <string>development</string>
            <key>provisioningProfiles</key>
            <dict>
              <key>com.newProject.SignIn</key>
              <string>DemoTest</string>
            </dict>
            <key>signingCertificate</key>
            <string>Apple Development</string>
            <key>signingStyle</key>
            <string>manual</string>
            <key>stripSwiftSymbols</key>
            <true/>
            <key>teamID</key>
            <string>X372X3URRM</string>
            <key>thinning</key>
            <string>&lt;none&gt;</string>
          </dict>
          </plist>
          EOF

    #  - name: Export IPA
    #    run: |
     #     xcodebuild -exportArchive -archivePath $RUNNER_TEMP/SignIn.xcarchive -exportOptionsPlist "ExportOptions.plist" -exportPath ${{ runner.workspace }}/_temp/build
      - name: List Archive Directory
        run: ls -al $RUNNER_TEMP
      
      - name: Export IPA
        run: |
          xcodebuild -exportArchive \
            -archivePath $RUNNER_TEMP/SignIn.xcarchive \
            -exportOptionsPlist "ExportOptions.plist" \
            -exportPath $RUNNER_TEMP/build
        env:
          RUNNER_TEMP: ${{ runner.temp }}
          
      - name: Create IPA Output Directory
        run: mkdir -p IPAOutput

      - name: Copy IPA to Output Directory
        run: cp -R ${{ runner.workspace }}/_temp/build/SignIn.ipa IPAOutput/SignIn.ipa

      - name: Display Success Message
        run: echo "IPA exported successfully"

      - name: Transfer IPA to remote server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_SERVER_HOST }}
          username: ${{ secrets.REMOTE_SERVER_USERNAME }}
          key: ${{ secrets.REMOTE_SERVER_PRIVATE_KEY }}
          source: IPAOutput/SignIn.ipa
          target: /home/ubuntu/iOS/SignIn.ipa

